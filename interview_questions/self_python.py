"""
self представляет экземпляр объекта текущего класса. Позволяет обращаться к атрибутам и методам данного экземпляра
внутри класса. Это ключевой аспект объектно-ориентированного программирования, позволяющий методам взаимодействовать
с данными объекта, к которому они принадлежат.

Почему self необходим

✅ Доступ к атрибутам и методам экземпляра: `Используется внутри методов класса для доступа или модификации атрибутов
и вызова других методов экземпляра. Позволяет каждому экземпляру класса иметь собственные данные и поведение.

✅ Определение методов экземпляра: Здесь первый параметр обычно называется self. Это соглашение, а не строгое правило,
но его следует соблюдать для согласованности и читаемости кода.

В Python ключевое слово self используется для обращения к текущему объекту класса. Оно передается как первый аргумент
в методы класса и позволяет работать с атрибутами и методами объекта класса внутри этих методов.
"""


class MyClass:
    def __init__(self, value):
        self.my_attribute = value

    def show_value(self):
        print(self.my_attribute)

    def update_value(self, new_value):
        self.my_attribute = new_value


class Person:
    def __init__(self, name):
        self.name = name

    def say_hello(self):
        print(f"Hello {self.name}")


if __name__ == "__main__":
    my_object = MyClass(10)
    my_object.show_value()
    print("*" * 200)

    person = Person("John")
    person.say_hello()
